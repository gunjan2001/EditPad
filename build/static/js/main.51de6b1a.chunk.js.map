{"version":3,"sources":["Components/Alert.js","Components/Navbar.js","Components/TextFrom.js","Components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","react_default","a","createElement","style","height","alert","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","Capitalize","msg","Navbar","mode","react_router_dom","to","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","onClick","toggleMode","htmlFor","TextFrom","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","_useState4","fWord","findWord","_useState5","_useState6","rWord","replaceWord","Fragment","color","heading","value","onChange","event","target","backgroundColor","rows","placeholder","disabled","length","newText","showAlert","arr","split","i","join","navigator","clipboard","writeText","replaceAll","filter","element","About","myStyle","aria-labelledby","data-bs-parent","defaultProps","App","Mode","setMode","setAlert","message","setTimeout","document","body","Components_Alert","react_router","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.51de6b1a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const Capitalize =(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n   return (\r\n    //this is the way of writing the if else condition see if the first props.alert is null then the div tag is not run at all \r\n    <div style={{height : \"50px\"}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\"> \r\n          <strong>{Capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n        </div>} {/* here we have to add the {} because we have directly write the js props.alert so thats why */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n\r\n    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" \r\n    data-bs-target=\"#navbarSupportedContent\" \r\n    aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n\r\n        <li className=\"nav-item\">\r\n        <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">{props.about}</Link>\r\n        </li>\r\n      </ul>\r\n\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-warning\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.mode==='dark'?'light':'dark'}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode==='dark'?'Light':'Dark'} Mode</label>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n\r\n\r\n//default protypes : means if we have set props type one time then we can not pass any other types props\r\n//is required means if we dont have any value(passed) then it will throw an error in console\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  about: PropTypes.string.isRequired\r\n}\r\n\r\n//default props : this is used when we are not passing any thing in the component so it will use bydefault use this \r\n\r\nNavbar.defaultProps ={\r\n  title: \"Default title\",\r\n  about : \"Default about\"\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextFrom(props) {\r\n\r\n    \r\n    // //word count\r\n    // const countWord = () =>{\r\n    //     return text.split(' ').filter(a => a.trim()).length;\r\n    // }\r\n\r\n    //handle extra spaces\r\n    const handleExtraSpace = () =>{\r\n        let newText = text.split(/[ ] +/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra Space Removed\",\"success\");\r\n    }\r\n\r\n    //copy text\r\n    const handleCopy = ()=>{\r\n        // let newText = document.getElementById(\"mybox\");\r\n        // newText.select();\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Text Copied to ClipBoard\",\"success\");\r\n        // document.getSelection().removeAllRanges();\r\n    }\r\n\r\n    //find and replce\r\n    const handleFindChange = (event) => {\r\n        findWord(event.target.value) ;\r\n    };\r\n\r\n    const handleReplaceChange = (event) => {\r\n        replaceWord(event.target.value);\r\n    };\r\n\r\n    const handleReplaceClick = ()=>{\r\n        let newText = text.replaceAll(fWord,rWord);\r\n        setText(newText);\r\n        props.showAlert(\"Text Is Replaced With New Text\",\"success\");\r\n    }\r\n\r\n\r\n    //capitalize the each word\r\n    const handleCzClick = ()=>{\r\n        const arr = text.split(\" \");\r\n        for (let i = 0; i < arr.length; i++) {\r\n            arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\r\n        }\r\n        let newText = arr.join(\" \");\r\n        setText(newText);\r\n        props.showAlert(\"All Text Is Converted To CamelCase\",\"success\");\r\n    }\r\n\r\n\r\n    const handleClearClick = ()=>{\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText = \"\";\r\n        findWord(newText)\r\n        replaceWord(newText)\r\n        setText(newText)\r\n        props.showAlert(\"Cleared\",\"success\");\r\n    }\r\n\r\n    const handleLoClick = ()=>{\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"All Text Is Converted To Small\",\"success\");\r\n    }\r\n\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"All Text Is Converted To Capital\",\"success\");\r\n    }\r\n    \r\n    const onChangehandle = (event)=>{\r\n        // console.log(\"change\");\r\n        setText(event.target.value)\r\n    }\r\n    \r\n    const [text, setText] = useState(\"\");\r\n    const [fWord, findWord] = useState(\"\");\r\n    const [rWord, replaceWord] = useState(\"\");\r\n    \r\n  return (\r\n    <>\r\n    <div className = \"container\" style={{color: props.mode==='dark'?'white':'#010c14'}}>\r\n        <h1>{props.heading} </h1>\r\n        <div className=\"mb-3\" > \r\n            <textarea className=\"form-control\" value={text} onChange={onChangehandle} style={{backgroundColor: props.mode==='dark'?'#010c14':'white', \r\n            color: props.mode==='dark'?'white':'#010c14'}} id=\"mybox\" rows=\"8\" placeholder=\"Enter text\"></textarea>\r\n            <textarea className=\"form my-2\" value={fWord} onChange={handleFindChange}  style={{backgroundColor: props.mode==='dark'?'#010c14':'white', \r\n            color: props.mode==='dark'?'white':'#010c14'}}  id=\"mybox1\" rows=\"1\" placeholder=\"Enter find text\"></textarea>\r\n            <textarea className=\"form my-2 mx-2\"  value={rWord} onChange={handleReplaceChange}  style={{backgroundColor: props.mode==='dark'?'#010c14':'white', \r\n            color: props.mode==='dark'?'white':'#010c14'}} id=\"mybox2\" rows=\"1\" placeholder=\"Enter replace text\"></textarea>\r\n        </div>\r\n        \r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert To Upper</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert To Lower</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCzClick}>Convert To Capitalized</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpace}>Remove Extra Spaces</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy</button>\r\n        <button disabled={text.length===0} className=\"btn btn-success mx-1 my-1\" onClick={handleReplaceClick}>Find & Replace</button>\r\n        <button disabled={text.length===0} className=\"btn btn-danger mx-1 my-1\" onClick={handleClearClick}>Clear</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#010c14'}}> \r\n\r\n        <h2>Summary</h2>\r\n        <p> {text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n        <p>Read time: {0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Nothing to preview!\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n\r\n    let myStyle = {\r\n        color: props.mode === 'dark'?'white':'#010c14',\r\n        backgroundColor: props.mode ==='dark'?'#010c14':'white'\r\n    }\r\n    \r\n    // const [myStyle, setMyStyle] = useState({\r\n    //     color: 'black',\r\n    //     backgroundColor: 'white'\r\n    // })\r\n    // const [btntext, setBtnText] = useState(\"Enable Dark Mode\")\r\n    \r\n    // const toggleStyle = ()=>{\r\n    //     if(myStyle.color === 'black'){\r\n    //         setMyStyle({ \r\n    //             color: 'white',\r\n    //             backgroundColor: 'black',\r\n    //             border: '1px solid white'\r\n                \r\n    //         })\r\n    //         setBtnText(\"Enable Light Mode\")\r\n    //     }\r\n    //     else{\r\n    //         setMyStyle({ \r\n    //             color: 'black',\r\n    //             backgroundColor: 'white'\r\n    //         })\r\n    //         setBtnText(\"Enable Dark Mode\");\r\n    //     }\r\n    // }\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n        <h1 className=\"my-3\" style={{color: props.mode ==='dark'?'white':'#042743'}}>About Us</h1>\r\n        <div className=\"accordion\" id=\"accordionExample\">\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                <strong>Analyze Your text </strong>\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={myStyle}>\r\n                Textutils gives you a way to analyze your text quickly and efficiently. Be it word count, character count or \r\n\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                <strong>Free to use </strong>\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={myStyle}>\r\n                TextUtils is a free character counter tool that provides instant character count & word count statistics for a given text. TextUtils reports the number of words and characters. Thus it is suitable for writing text with word/ character limit.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                <strong>Browser Compatible </strong>\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={myStyle}>\r\n                This word counter software works in any web browsers such as Chrome, Firefox, Internet Explorer, Safari, Opera. It suits to count characters in facebook, blog, books, excel document, pdf document, essays, etc.\r\n\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    )\r\n}","import { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./Components/Alert\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextFrom\";\nimport About from \"./Components/About\";\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\"; \n\nfunction App() {\n\n  const [Mode,setMode] =  useState('light');\n  const [alert,setAlert] =  useState(null);\n  \n  const showAlert = (message,type) =>{\n\n    setAlert({\n      msg : message,\n      type: type\n    })\n    setTimeout(() =>{\n      setAlert(null);\n    },1500);\n  }\n\n  // which we will pass to our Navbar from app.js. \n  // Our toggle mode function will change the mode with dark if our mode is light or vice versa.\n  const toggleMode = ()=>{\n      if(Mode==='light'){\n        setMode('dark');\n        document.body.style.backgroundColor = '#010c14';\n        showAlert(\"Dark Mode is Enabled\",\"success\");\n      }\n      else{\n        setMode('light');\n        document.body.style.backgroundColor = 'white';\n        showAlert(\"Light Mode is Enabled\",\"success\");\n      }\n  }\n\n\n  return (\n    <>\n      <Router>\n      <Navbar title=\"EditPad\" about = \"About us\" mode={Mode} text={Mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n        <Switch>\n            <Route exact path=\"/about\">\n              <About mode={Mode}/>\n            </Route>\n            <Route exact path=\"/\">\n              <TextForm heading = \"EditPad - Word Substitution\" mode={Mode} showAlert = {showAlert} />\n            </Route>\n        </Switch>\n      </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}